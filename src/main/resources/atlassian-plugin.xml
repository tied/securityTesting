<atlassian-plugin key="${atlassian.plugin.key}" name="${project.name}"
	plugins-version="2">
	<plugin-info>
		<description>${project.description}</description>
		<version>${project.version}</version>
		<vendor name="${project.organization.name}" url="${project.organization.url}" />
        <param name="atlassian-licensing-enabled">true</param>
		<param name="plugin-icon">images/pluginIcon.png</param>
		<param name="plugin-logo">images/pluginLogo.png</param>
		<param name="configure.url">/plugins/servlet/bamboo-sso/configure.action</param>
	</plugin-info>

	<!-- add our i18n resource -->
	<resource type="i18n" name="i18n" location="bamboo-sso" />

	<!-- add our web resources -->
	<web-resource key="samlsso.plugin.auth.resources"
		i18n-name-key="samlsso.plugin.auth.resources" name="Authentication Resources">
		<dependency>com.atlassian.auiplugin:ajs</dependency>
        <dependency>com.atlassian.auiplugin:aui-select2</dependency>
        <dependency>com.atlassian.auiplugin:aui-toggle</dependency>
        <dependency>com.atlassian.auiplugin:aui-icon</dependency>
        <dependency>com.atlassian.auiplugin:dialog2</dependency>
        <dependency>com.atlassian.auiplugin:aui-flag</dependency>
        <dependency>com.atlassian.auiplugin:aui-iconography</dependency>
        <dependency>com.atlassian.auiplugin:aui-lozenge</dependency>
        <dependency>com.atlassian.auiplugin:aui-spinner</dependency>
        <dependency>com.atlassian.auiplugin:aui-expander</dependency>
        <dependency>com.atlassian.auiplugin:aui-select</dependency>
        <resource name="miniorange-constants.js" type="download" location="js/miniorange-constants.js" />
        <resource name="customcerts.js" type="download" location="js/customcerts.js" />
        <resource name="bamboo-sso.css" type="download" location="css/bamboo-sso.css" />
        <resource name="utility.js" type="download" location="js/utility.js" />
        <resource name="ajaxCalls.js" type="download" location="js/ajaxCalls.js" />
        <resource name="process-redirect-rules.js" type="download" location="/js/process-redirect-rules.js" />
        <resource name="bamboo-sso.js" type="download" location="js/bamboo-sso.js" />
        <context>atl.general</context>
	</web-resource>


	<web-resource key="bamboo-sso-resources" name="Bamboo-sso Web Resources">
		<dependency>com.atlassian.auiplugin:ajs</dependency>
        <dependency>com.atlassian.auiplugin:aui-flag</dependency>

        <resource name="miniorange-constants.js" type="download" location="js/miniorange-constants.js" />
        <resource name="utility.js" type="download" location="js/utility.js" />
        <resource name="ajaxCalls.js" type="download" location="js/ajaxCalls.js" />
        <resource name="process-redirect-rules.js" type="download" location="js/process-redirect-rules.js" />
		<resource type="download" name="bamboo-sso.css" location="css/bamboo-sso.css" />
        <resource name="customcerts.js" type="download" location="js/customcerts.js" />
        <resource type="download" name="bamboo-sso.js" location="js/bamboo-sso.js" />
		<resource type="download" name="images/" location="/images" />
		<context>atl.admin</context>
	</web-resource>

    <web-resource name="Plugin Images" key="samlsso.plugin.images.resource" i18n-name-key="samlsso.plugin.images.resource">
        <resource name="images/" location="/images/idpimages" type="download"/>
        <context>idpimages</context>
    </web-resource>

    <web-resource name="Setup Icons" key="samlsso.plugin.icons.resource" i18n-name-key="samlsso.plugin.icons.resource">
        <resource name="images/" location="/images/setupicons" type="download"/>
        <context>setupicons</context>
    </web-resource>

	<web-item name="SAML SSO Configuration Menu" i18n-name-key="samlsso.config.menu"
		key="samlsso.config.menu" section="system.admin/security"
		weight="150" application="bamboo">
		<description key="samlsso.config.menu.desc">This display menu item for configuring
			the plugin in System settings
			under Security.
		</description>
		<label key="samlsso.config.menu.lable">miniOrange SAML SSO Configuration</label>
		<link linkId="samlsso.config.menu.link">/plugins/servlet/bamboo-sso/configure.action</link>
	</web-item>

	<!-- Action Mapping -->

	<xwork name="XWork Actions" key="saml2-configure-xwork">
        <package name="Saml2 configuration package" extends="default" namespace="/plugins/servlet/bamboo-sso">     
			
			 <action name="configure" class="com.miniorange.sso.saml.bamboo.action.MoIdpListAction">
                 <interceptor-ref name="defaultStack"/>
                 <result name="input" type="freemarker">/templates/saml/listidp.ftl</result>
                 <result name="success" type="freemarker">/templates/saml/listidp.ftl</result>
                 <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="listidp" class="com.miniorange.sso.saml.bamboo.action.MoIdpListAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/listidp.ftl</result>
                <result name="success" type="freemarker">/templates/saml/listidp.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="spmetadata" class="com.miniorange.sso.saml.bamboo.action.MoSpConfigurationAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/spmetadata.ftl</result>
                <result name="success" type="freemarker">/templates/saml/spmetadata.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="postlogout" class="com.miniorange.sso.saml.bamboo.action.MoPostLogoutRulesAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/postlogout.ftl</result>
                <result name="success" type="freemarker">/templates/saml/postlogout.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            <action name="headerbasedauth" class="com.miniorange.sso.saml.bamboo.action.MoHeaderBasedAuthAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/headerauthentication/headerbasedauth.ftl</result>
                <result name="success" type="freemarker">/templates/headerauthentication/headerbasedauth.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            <action name="flowdrivensetup" class="com.miniorange.sso.saml.bamboo.action.MoFlowDrivenSetupAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/flowdrivensetup.ftl</result>
                <result name="success" type="freemarker">/templates/saml/flowdrivensetup.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            <action name="supportedidps" class="com.miniorange.sso.saml.bamboo.action.MoSupportedIdpsAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/supportedidps.ftl</result>
                <result name="success" type="freemarker">/templates/saml/supportedidps.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            <action name="sessionmanagement" class="com.miniorange.sso.saml.bamboo.action.MoSessionManagementAction">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/sessionmanagement.ftl</result>
                <result name="success" type="freemarker">/templates/saml/sessionmanagement.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            <action name="signinsettings" class="com.miniorange.sso.saml.bamboo.action.MoRedirectionRules">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/redirectiontoggles.ftl</result>
                <result name="success" type="freemarker">/templates/saml/redirectiontoggles.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="redirectionrules" class="com.miniorange.sso.saml.bamboo.action.MoRedirectionRules">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/saml/redirectrules.ftl</result>
                <result name="success" type="freemarker">/templates/saml/redirectrules.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
<!--
            <action name="deleteidp" class="com.miniorange.sso.saml.bamboo.servlet.MoDeleteIdpServlet">
                <interceptor-ref name="defaultStack"/>
                <result name="input" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/listidp.ftl</result>
            </action>
-->

            <action name="addidp" class="com.miniorange.sso.saml.bamboo.action.MoAddIDPConfigurationAction">
                 <interceptor-ref name="defaultStack"/>
                 <result name="input" type="freemarker">/templates/saml/addidp.ftl</result>
                 <result name="success" type="freemarker">/templates/saml/addidp.ftl</result>
           		 <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            
            <action name="attributemappingconfig" class="com.miniorange.sso.saml.bamboo.action.MoAttributeMappingAction">
                 <interceptor-ref name="defaultStack"/>
                 <result name="input" type="freemarker">/templates/saml/attributemappingconfig.ftl</result>
                 <result name="success" type="freemarker">/templates/saml/attributemappingconfig.ftl</result>
           		 <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>
            
            <action name="groupmappingconfig" class="com.miniorange.sso.saml.bamboo.action.MoGroupMappingAction">
                 <interceptor-ref name="defaultStack"/>
                 <result name="input" type="freemarker">/templates/saml/groupmappingconfig.ftl</result>
                 <result name="success" type="freemarker">/templates/saml/groupmappingconfig.ftl</result>
           		 <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="overview" class="com.miniorange.sso.saml.bamboo.action.MoOverviewAction">
                <interceptor-ref name="defaultStack" />
                <result name="input" type="freemarker">/templates/saml/overview.ftl</result>
                <result name="success" type="freemarker">/templates/saml/overview.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="advancedsso" class="com.miniorange.sso.saml.bamboo.action.MoAdvancedSSOAction">
                <interceptor-ref name="defaultStack" />
                <result name="input" type="freemarker">/templates/saml/advancedsso.ftl</result>
                <result name="success" type="freemarker">/templates/saml/advancedsso.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="looknfeel" class="com.miniorange.sso.saml.bamboo.action.MoLooknFeelAction">
                <interceptor-ref name="defaultStack" />
                <result name="input" type="freemarker">/templates/saml/looknfeel.ftl </result>
                <result name="success" type="freemarker">/templates/saml/looknfeel.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

            <action name="globalssosettings" class="com.miniorange.sso.saml.bamboo.action.MoGlobalSSOSettingsAction">
                <interceptor-ref name="defaultStack" />
                <result name="input" type="freemarker">/templates/saml/globalssosettings.ftl</result>
                <result name="success" type="freemarker">/templates/saml/globalssosettings.ftl</result>
                <result name="upm" type="redirect">/plugins/servlet/upm</result>
            </action>

    <!-- <action name="signinsettings" class="com.miniorange.sso.saml.bamboo.action.MoSignInSettingsAction">
            <interceptor-ref name="defaultStack"/>
            <result name="input" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/signinoptions.ftl</result>
            <result name="success" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/signinoptions.ftl</result>
            <result name="upm" type="redirect">/plugins/servlet/upm</result>
       </action>-->

       <action name="troubleshooting" class="com.miniorange.sso.saml.bamboo.action.MoTroubleshootingAction">
           <interceptor-ref name="defaultStack" />
           <result name="input" type="freemarker">/templates/troubleshooting.ftl</result>
           <result name="success" type="freemarker">/templates/troubleshooting.ftl</result>
           <result name="upm" type="redirect">/plugins/servlet/upm</result>
       </action>

       <action name="customcerts" class="com.miniorange.sso.saml.bamboo.action.MoCustomCertificatesAction">
           <interceptor-ref name="defaultStack"/>
           <result name="input" type="freemarker">/templates/saml/customcerts.ftl</result>
           <result name="success" type="freemarker">/templates/saml/customcerts.ftl</result>
           <result name="upm" type="redirect">/plugins/servlet/upm</result>
       </action>

       <action name="customtemplates" class="com.miniorange.sso.saml.bamboo.action.MoCustomTemplateAction">
           <interceptor-ref name="defaultStack"/>
           <result name="input" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/customtemplates.ftl</result>
           <result name="success" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/customtemplates.ftl</result>
           <result name="upm" type="redirect">/plugins/servlet/upm</result>
       </action>

       <action name="contactus" class="com.miniorange.sso.saml.bamboo.action.MoContactUsAction">
            <interceptor-ref name="defaultStack"/>
            <result name="input" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/contactus.ftl</result>
            <result name="success" type="freemarker">/templates/com/miniorange/sso/saml/bamboo/contactus.ftl</result>
            <result name="upm" type="redirect">/plugins/servlet/upm</result>
       </action>

       <action name="downloadcertificate" class="com.miniorange.sso.saml.bamboo.action.MoDownloadCertificateAction" >
           <view name="input">/templates/com/miniorange/sso/saml/bamboo/configure.flt</view>
       </action>

       <action name="backuprestore" class="com.miniorange.sso.saml.bamboo.action.MoImportExportAction">
           <result name="input" type="freemarker">/templates/saml/backuprestore.ftl</result>
           <result name="success" type="freemarker">/templates/saml/backuprestore.ftl</result>
           <result name="error" type="freemarker">/templates/saml/backuprestore.ftl</result>
           <result name="upm" type="redirect">/plugins/servlet/upm</result>
       </action>
   </package>
</xwork>

<!-- Component -->

    <component-import i18n-name-key="samlsso.plugin.i18nResolver" key="samlsso.plugin.i18nResolver"
                      name="i18nResolver"  interface="com.atlassian.sal.api.message.I18nResolver"/>
	 <component i18n-name-key="samlsso.plugin.settings" key="samlsso.plugin.settings"
		name="SAML SSO Plugin Settings" class="com.miniorange.sso.saml.bamboo.MoSAMLSettings" />
    <component i18n-name-key="samlsso.idp.config" key="samlsso.idp.config"
               name="Idp Config" class="com.miniorange.sso.saml.dto.MoIDPConfig" />
    <component i18n-name-key="samlsso.plugin.handler" key="samlsso.plugin.handler"
		name="SAML SSO Plugin Handler" class="com.miniorange.sso.saml.bamboo.MoPluginHandler" />
	<component i18n-name-key="samlsso.saml.message.handler" key="samlsso.saml.message.handler"
		name="SAML Message Handler" class="com.miniorange.sso.saml.bamboo.MoSAMLManager" />
	<component i18n-name-key="samlsso.plugin.moJobRunnerImpl" key="samlsso.plugin.moJobRunnerImpl"
               name="JobRunner Implementation" class="com.miniorange.sso.saml.bamboo.schedulers.MoMetadataJobRunnerImpl" />
    <component i18n-name-key="samlsso.pluginconfigurations.handler" key="samlsso.pluginconfigurations.handler"
			   name="SAML SSO Plugin Configurations Handler" class="com.miniorange.sso.saml.bamboo.MoPluginConfigurationsHandler"/>
    <component i18n-name-key="samlsso.send.util" key="send.util" name="Send Alert Email" class="com.miniorange.sso.saml.utils.MoSendAlert"/>

    <component i18-name-key="samlsso.certificate.expiry.scheduler" key="samlsso.certificate.expiry.scheduler" class="com.miniorange.sso.saml.bamboo.schedulers.CertificateExpiryCheckImpl"
               public="true">
        <description>The plugin component that schedules the SP Certificate Expiry check.</description>
        <interface>com.atlassian.sal.api.lifecycle.LifecycleAware</interface>
        <interface>com.miniorange.sso.saml.bamboo.schedulers.CertificateExpiryCheck
        </interface>
    </component>

    <component i18n-name-key="samlsso.plugin.migration.service" name="Plugin Migration Service" key="samlsso.plugin.migration.service"
               class="com.miniorange.sso.saml.bamboo.schedulers.MoPluginMigrationService" public="true">
        <interface>com.atlassian.sal.api.lifecycle.LifecycleAware</interface>
    </component>
<!--    <component-import i18n-name-key="samlsso.crowd.service" key="samlsso.crowd.service"-->
<!--              name="Crowd Service" interface="com.atlassian.crowd.embedded.api.CrowdService" />-->
<!--    <component-import i18n-name-key="samlsso.crowd.directory.service" key="samlsso.crowd.directory.service"-->
<!--                      name="Crowd Directory Service" interface="com.atlassian.crowd.embedded.api.CrowdDirectoryService" />-->
   
	<component-import i18n-name-key="samlsso.plugin.settings.factory"
		key="samlsso.plugin.settings.factory" name="Plugin Settings Factory"
		interface="com.atlassian.sal.api.pluginsettings.PluginSettingsFactory"
		filter="" />

    <component-import key="pluginScheduler">
        <description>SAL Scheduler</description>
        <interface>com.atlassian.sal.api.scheduling.PluginScheduler
        </interface>
    </component-import>
		
	<component-import i18n-name-key="samlsso.user.bambooUserManager" key="samlsso.user.bambooUserManager" name="Bamboo User Manager"
                      interface="com.atlassian.bamboo.user.BambooUserManager" filter=""/>                          
                      
    <component-import i18n-name-key="samlsso.user.manager" key="samlsso.user.manager" name="User Manager"
                      interface="com.atlassian.sal.api.user.UserManager" filter=""/>                    
                      
    <component-import i18n-name-key="samlsso.login.uri.provider" key="samlsso.login.uri.provider"
                      name="Login URI Provider"
					  interface="com.atlassian.sal.api.auth.LoginUriProvider" filter=""/>
				
    <component-import i18n-name-key="samlsso.bamboo.security.bambooPermissionManager" key="samlsso.bamboo.security.bambooPermissionManager"
                      name="Bamboo Permission Manager"
					  interface="com.atlassian.bamboo.security.BambooPermissionManager" filter=""/>
					  
	<component-import name="Plugin License Manager" key="pluginLicenseManager"
		i18n-name-key="samlsso.plugin.pluginLicenseManager" interface="com.atlassian.upm.api.license.PluginLicenseManager" />
	
	<component-import name="Bamboo AgentManager Manager" key="agentManager"
		i18n-name-key="samlsso.plugin.agentManager" interface="com.atlassian.bamboo.buildqueue.manager.AgentManager" />
		
	<component-import name="Template Rendere" key="renderer"
		i18n-name-key="samlsso.plugin.renderer" interface="com.atlassian.templaterenderer.TemplateRenderer" />
		            
   <component i18n-name-key="samlsso.plugin.user.manager" key="samlsso.plugin.user.manager"
               name="Mo SAML User Manager" class ="com.miniorange.sso.saml.bamboo.MoSAMLUserManager" />

    <component-import i18n-name-key="samlsso.plugin.schedulerService" key="schedulerService"
              name="Atlassian Scheduler Service" interface="com.atlassian.scheduler.SchedulerService" />

    <!-- Servlets & Filters -->

    <servlet name="Configuration Servlet" i18n-name-key="samlsso.config.servlet" key="samlsso.config.servlet"
             class="com.miniorange.sso.saml.bamboo.servlet.MoConfigurationServlet">
        <description key="samlsso.config.servlet.desc">This module handles configuration of your Identity Provider.</description>
        <url-pattern>/saml/getconfig</url-pattern>
    </servlet>

    <servlet name="Ajax Action Calls" i18n-name-key="samlsso.config.ajaxcallservlet" key="samlsso.config.ajaxcallservlet"
             class="com.miniorange.sso.saml.bamboo.servlet.MoAjaxCallsServlet">
        <description key="samlsso.config.ajaxcallservlet.desc">This module provides different ajax functions.</description>
        <url-pattern>/saml/moapi</url-pattern>
    </servlet>

   <servlet name="Login with IDP" i18n-name-key="samlsso.login" key="samlsso.login"
             class="com.miniorange.sso.saml.bamboo.servlet.MoSAMLLoginServlet">
        <description key="samlsso.login.desc">This module handles login with you Identity Provider.</description>
        <url-pattern>/saml/auth</url-pattern>
    </servlet>

    <servlet name="Replace Old Setting with New" i18n-name-key="samlsso.replace.settings" key="samlsso.replace.settings"
             class="com.miniorange.sso.saml.bamboo.servlet.ReplaceOldSettingWithNewServlet">
        <description key="samlsso.replace.settings.desc">This module replalce old setting with new.</description>
        <url-pattern>/saml/replaceOldSettingsWithNew</url-pattern>
    </servlet>
    
     <servlet name="SP Metadata Generator" i18n-name-key="samlsso.metadata.generator" key="samlsso.metadata.generator" class="com.miniorange.sso.saml.bamboo.servlet.MoMetadataServlet">
        <description key="samlsso.login.desc">This module generates SP metadata for your bamboo Instance.</description>
        <url-pattern>/saml/metadata</url-pattern>
    </servlet> 
    
    <servlet name="SP Metadata Uploador" i18n-name-key="samlsso.metadata.uploador"
		key="samlsso.metadata.uploador" class="com.miniorange.sso.saml.bamboo.servlet.MoMetadataUpload">
		<description key="samlsso.login.desc">This module uploads SP metadata for your
			bamboo Instance.</description>
		<url-pattern>/bamboo-sso/metadataupload</url-pattern>
	</servlet>

    <servlet name="Delete IDP" i18n-name-key="samlsso.idp.delete"
             key="samlsso.idp.delete" class="com.miniorange.sso.saml.bamboo.servlet.MoDeleteIdpServlet">
        <description key="samlsso.login.desc">This module Deletes IDP from Bamboo.</description>
        <url-pattern>/bamboo-sso/deleteidp</url-pattern>
    </servlet>

    <servlet name="Download Idp Guide" i18n-name-key="samlsso.config.downloadidpguides" key="samlsso.config.downloadidpguides"
             class="com.miniorange.sso.saml.bamboo.servlet.MoDownloadIdpGuidesServlet">
        <description key="samlsso.config.downloadidpguides.desc">This module allows you to download Guides for your Identity Provider.
        </description>
        <url-pattern>/downloadidpguides</url-pattern>
    </servlet>

    <servlet name="Enable Backdoor URL" i18n-name-key="samlsso.config.enablebackdoorurl" key="samlsso.config.enablebackdoorurl"
             class="com.miniorange.sso.saml.bamboo.servlet.MoEnableBackdoorUrl">
        <description key="samlsso.config.enablebackdoorurl.desc">This module allows you to enable Backdoor URL.
        </description>
        <url-pattern>/enablebackdoorurl</url-pattern>
    </servlet>

    <servlet name=" Enable disable SSO" i18n-name-key="samlsso.config.enablessoapi" key="samlsso.config.enablessoapi"
             class="com.miniorange.sso.saml.bamboo.servlet.EnableSSOAPI">
        <description key="samlsso.config.enablessoapi.desc">This module allows you to enable and disable SSO.
        </description>
        <url-pattern>/enablessoapi</url-pattern>
    </servlet>

    <servlet name="Configure Plugin URl" i18n-name-key="samlsso.config.configureplugin" key="samlsso.config.configureplugin"
             class="com.miniorange.sso.saml.bamboo.servlet.MoConfigurePlugin">
        <description key="samlsso.config.configureplugin.desc">This module allows  to configure plugin with REST API
        </description>
        <url-pattern>/configureplugin</url-pattern>
    </servlet>

    <servlet name="Reset Plugin Settings" i18n-name-key="samlsso.config.resetpluginsettings" key="samlsso.config.resetpluginsettings"
             class="com.miniorange.sso.saml.bamboo.servlet.MoResetSettingsServlet">
        <description key="samlsso.config.resetpluginsettings.desc">This module allows you to clear plugin settings.
        </description>
        <url-pattern>/saml/moconfreset</url-pattern>
    </servlet>

    <servlet name="SAML Single Logout" i18n-name-key="samlsso.logout" key="samlsso.logout" class="com.miniorange.sso.saml.bamboo.servlet.MoSAMLLogoutServlet">
        <description key="samlsso.logout.desc">This module handles Single Logout with your Identity Provider.</description>
        <url-pattern>/saml/logout</url-pattern>
    </servlet>
    
     <servlet name="Download Plugin Configuration" i18n-name-key="samlsso.downloadconfiguration" key="samlsso.downloadconfiguration" class="com.miniorange.sso.saml.bamboo.servlet.MoDownloadPluginConfiguration">
        <description key="samlsso.downloadconfiguration.desc">This module allows you to download plugin configutaion in JSON File.</description>
        <url-pattern>/saml/downloadconfiguration</url-pattern>
    </servlet>

    <servlet name="Download SP Metadata" i18n-name-key="samlsso.downloadmetadata" key="samlsso.downloadmetadata"
             class="com.miniorange.sso.saml.bamboo.servlet.MoDownloadMetadataServlet">
        <description key="samlsso.downloadmetadata.desc">This module allows you to download SP metadata in an XML File.</description>
        <url-pattern>/saml/downloadmetadata</url-pattern>
    </servlet>

    <servlet name="Upload Plugin Configuration" i18n-name-key="samlsso.upload.downloadconfiguration" key="samlsso.upload.downloadconfiguration" class="com.miniorange.sso.saml.bamboo.servlet.MoUploadPluginConfigurationServlet">
        <description key="samlsso.upload.downloadconfiguration.desc">This module allows you to upload plugin configutaion.</description>
        <url-pattern>/saml/uploadconfiguration</url-pattern>
    </servlet>

    <servlet name="Save Custom Metadata" i18n-name-key="samlsso.config.custommetadata" key="samlsso.config.custommetadata"
             class="com.miniorange.sso.saml.bamboo.servlet.MoCustomMetadata">
        <description key="samlsso.config.custommetadata.desc">This module allows you to save custom metadata
        </description>
        <url-pattern>/saml/updatemetadata</url-pattern>
    </servlet>

    <servlet name="Feedback Servlet" i18n-name-key="samlsso.config.moFeedbackServlet" key="samlsso.config.moFeedbackServlet"
             class="com.miniorange.sso.saml.bamboo.servlet.MoFeedbackServlet">
        <description key="samlsso.config.moFeedbackServlet.desc">This module sends feedback
        </description>
        <url-pattern>/saml/sendfeedback</url-pattern>
    </servlet>


    <servlet name="Header based Authentication" i18n-name-key="sso.header.auth" key="sso.header.auth"
             class="com.miniorange.sso.saml.bamboo.servlet.MoHeaderAuthenticationServlet">
        <description key="sso.header.auth.desc">This module handles header based authentication for this Bamboo server.
        </description>
        <url-pattern>/saml/header</url-pattern>
    </servlet>

    <servlet name="Generate new certificate" i18n-name-key="samlsso.gennewcert.servlet" key="samlsso.gennewcert.servlet"
             class="com.miniorange.sso.saml.bamboo.servlet.MoGenerateCert">
        <description key="sso.generate.certificate.desc">This module handles SP Certificate generation.
        </description>
        <url-pattern>/saml/mogencert</url-pattern>
    </servlet>

    <servlet name="Show test Config" i18n-name-key="samlsso.test.config.servlet" key="samlsso.test.config.servlet"
             class="com.miniorange.sso.saml.bamboo.servlet.MoPerformTestConfiguration">
        <description key="samlsso.test.config.servlet.desc">This module handles performs test configuration.
        </description>
        <url-pattern>/saml/testconfig</url-pattern>
    </servlet>
    
    <servlet-filter name="Login Filter" key="samlsoo-login-filter" location="before-dispatch"
                    class="com.miniorange.sso.saml.bamboo.servlet.MoSAMLLoginFilter" weight="200">
        <description>Handle Auto Redirection</description>
        <url-pattern>/userlogin!doDefault.action</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </servlet-filter>
    
    <servlet-filter name="SAML SLO Filter" key="saml-logout-filter" location="before-login"
                    class="com.miniorange.sso.saml.bamboo.servlet.MoSAMLLogoutFilter" weight="0">
        <description>
           This module force to generate the single logout request for your identity provider.
        </description>
        <url-pattern>/userLogout.action*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </servlet-filter>

    <servlet-filter name="No SSO Filter" key="no-SSO-filter" location="before-dispatch"
                    class="com.miniorange.sso.saml.bamboo.servlet.MoBambooNoSSOFilter" weight="0">
        <description> No SSO Filter Handler </description>
        <url-pattern>/userlogin!doDefault.action</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </servlet-filter>
    
</atlassian-plugin>